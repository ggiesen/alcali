MASTER_MINION_ID=master

# DB
DB_BACKEND=mysql
DB_NAME=salt
DB_USER=alcali
DB_PASS=alcali
DB_HOST=db
DB_PORT=3306

# django
SECRET_KEY=thisisnotagoodsecret.orisit?
ALLOWED_HOSTS=*

# salt-api
SALT_URL=https://master:8080
SALT_AUTH=alcali

# LDAP (optional)
#AUTH_BACKEND=ldap
#AUTH_LDAP_SERVER_URI=ldaps://host.example.com
#AUTH_LDAP_BIND_DN="cn=John Doe,ou=users,dc=example,dc=com"
#AUTH_LDAP_BIND_PASSWORD=CorrectHorseBatteryStaple
#AUTH_LDAP_CACHE_TIMEOUT=3600
#AUTH_LDAP_USER_DN_TEMPLATE="uid=%(user)s,ou=users,dc=example,dc=com"
#AUTH_LDAP_USER_BASE_CN="ou=users,dc=example,dc=com"
#AUTH_LDAP_USER_SEARCH_FILTER="(sAMAccountName=%(user)s)"
#AUTH_LDAP_GROUP_SEARCH="LDAPSearch(\"ou=groups,dc=example,dc=com\", ldap.SCOPE_SUBTREE, \"(objectClass=groupOfNames)\")"
#AUTH_LDAP_GROUP_TYPE="GroupOfNamesType()"
#AUTH_LDAP_REQUIRE_GROUP="( LDAPGroupQuery(\"cn=enabled,ou=groups,dc=example,dc=com\") | LDAPGroupQuery(\"cn=also_enabled,ou=groups,dc=example,dc=com\") ) & ~LDAPGroupQuery(\"cn=disabled,ou=groups,dc=example,dc=com\")" # An LDAPGroupQuery instance
#AUTH_LDAP_DENY_GROUP="LDAPGroupQuery(\"cn=disabled,ou=groups,dc=example,dc=com\")" # An LDAPGroupQuery instance
#AUTH_LDAP_USER_FLAGS_BY_GROUP="{ \"is_active\": \"cn=active,ou=groups,dc=example,dc=com\", \"is_staff\": \"cn=active,ou=groups,dc=example,dc=com\" }"
#AUTH_LDAP_USER_QUERY_FIELD="username"
#AUTH_LDAP_USER_ATTR_MAP_USERNAME="sAMAccountName"
#AUTH_LDAP_USER_ATTR_MAP_FIRST_NAME="givenName"
#AUTH_LDAP_USER_ATTR_MAP_LAST_NAME="sn"
#AUTH_LDAP_USER_ATTR_MAP_EMAIL="mail"
#AUTH_LDAP_MIRROR_GROUPS=True # Can be True or a list of groups
#AUTH_LDAP_MIRROR_GROUPS_EXCEPT=["group3", "group4"] # A list of groups. Causes AUTH_LDAP_MIRROR_GROUPS to be ignored.
